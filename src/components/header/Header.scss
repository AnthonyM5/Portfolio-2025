@use '@/styles/variables' as v;
@use '@/styles/mixins' as m;

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: v.$background-darker;
  padding: v.$spacing-unit 0;
  z-index: 100;
  transition: v.$transition-base;
  border-bottom: 1px solid transparent;
  
  &.scrolled {
    background-color: rgba(v.$background-darker, 0.9);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid v.$border-color;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .header-container {
    @include m.container;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .logo-container {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 2rem;
    background-color: v.$background-light;
    transition: v.$transition-base;
    position: relative;
    
    &:hover {
      background-color: rgba(v.$primary-color, 0.1);
    }
    
    .logo {
      font-size: v.$font-size-xl;
      font-weight: v.$font-weight-bold;
      color: v.$text-light;
      margin-right: 0.75rem;
      z-index: 1;
    }
    
    .theme-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      background-color: v.$background-light;
      color: v.$text-light;
      border: none;
      cursor: pointer;
      transition: v.$transition-base;
      position: relative;
      
      &:hover {
        background-color: rgba(v.$primary-color, 0.2);
        transform: rotate(15deg);
      }
      
      .theme-icon {
        font-size: 1.25rem;
        
        &.sun {
          color: #f1c40f; // yellow for sun
        }
        
        &.moon {
          color: #9b59b6; // purple for moon
        }
      }
    }
  }
  
  .menu-toggle {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
    
    @include m.respond-to('md') {
      display: none;
    }
    
    span {
      display: block;
      width: 100%;
      height: 3px;
      background-color: v.$text-light;
      border-radius: 3px;
      transition: v.$transition-base;
    }
    
    &.active {
      span:nth-child(1) {
        transform: translateY(9px) rotate(45deg);
      }
      
      span:nth-child(2) {
        opacity: 0;
      }
      
      span:nth-child(3) {
        transform: translateY(-9px) rotate(-45deg);
      }
    }
  }
  
  .nav {
    @include m.respond-to('max-md') {
      position: fixed;
      top: 0;
      right: -100%;
      width: 80%;
      max-width: 300px;
      height: 100vh;
      background-color: v.$background-darker;
      padding: 80px v.$spacing-unit * 2 v.$spacing-unit * 2;
      transition: v.$transition-slow;
      z-index: 5;
      box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
      
      &.open {
        right: 0;
      }
    }
  }
  
  .nav-links {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    
    @include m.respond-to('max-md') {
      flex-direction: column;
      gap: v.$spacing-unit * 1.5;
    }
    
    @include m.respond-to('md') {
      gap: v.$spacing-unit * 2;
      align-items: center;
    }
    
    li {
      margin: 0;
      
      a, .dark-mode-toggle {
        color: v.$text-muted;
        text-decoration: none;
        font-size: v.$font-size-sm;
        font-weight: v.$font-weight-medium;
        transition: v.$transition-base;
        display: block;
        position: relative;
        
        &:hover, &.active {
          color: v.$text-light;
        }
        
        &.active::after {
          content: '';
          position: absolute;
          left: 0;
          right: 0;
          bottom: -5px;
          height: 2px;
          background-color: v.$primary-color;
          transform: scaleX(1);
          transform-origin: left;
          transition: transform 0.3s ease;
          
          @include m.respond-to('max-md') {
            bottom: -2px;
          }
        }
      }
    }
  }
}

// Add responsive mixin for max-width
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'max-md' {
    @media (max-width: (v.$breakpoint-md - 1px)) {
      @content;
    }
  }
}