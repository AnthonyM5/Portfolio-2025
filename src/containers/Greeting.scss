@use '@/styles/variables' as v;
@use '@/styles/mixins' as m;

.greeting {
  @include m.full-bleed;
  min-height: 100vh;
  display: flex;
  align-items: center;
  background-color: v.$background-darker;
  padding: v.$spacing-unit * 4 0;
  position: relative;
  overflow: hidden;

  &__background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 0% 0%, rgba(59, 130, 246, 0.15), transparent 25%),
      radial-gradient(circle at 100% 0%, rgba(99, 102, 241, 0.15), transparent 25%),
      radial-gradient(circle at 100% 100%, rgba(59, 130, 246, 0.15), transparent 25%),
      radial-gradient(circle at 0% 100%, rgba(99, 102, 241, 0.15), transparent 25%);
    filter: blur(80px);
    z-index: 1;
    animation: pulse 8s ease-in-out infinite;
  }

  .greeting-container {
    @include m.container;
    display: grid;
    grid-template-columns: 1fr;
    gap: v.$spacing-unit * 4;
    position: relative;
    z-index: 10;

    @include m.respond-to('md') {
      grid-template-columns: 1fr 1fr;
      align-items: center;
    }
  }

  .greeting-content {
    text-align: center;
    
    @include m.respond-to('md') {
      text-align: left;
    }

    h1 {
      font-size: v.$font-size-4xl;
      font-weight: v.$font-weight-bold;
      color: v.$text-light;
      margin-bottom: v.$spacing-unit;
      line-height: v.$line-height-tight;
      display: flex;
      align-items: center;
      gap: v.$spacing-unit;
      justify-content: center;

      @include m.respond-to('md') {
        justify-content: flex-start;
      }

      @include m.respond-to('lg') {
        font-size: calc(v.$font-size-4xl * 1.2);
      }

      .wave-emoji {
        display: inline-block;
        font-size: 0.9em;
        animation: wave 2.5s ease-in-out infinite;
        transform-origin: 70% 70%;
      }
    }

    p {
      font-size: v.$font-size-lg;
      color: v.$text-muted;
      margin-bottom: v.$spacing-unit * 2;
      line-height: v.$line-height-relaxed;
      max-width: 600px;

      @include m.respond-to('md') {
        font-size: v.$font-size-xl;
      }
    }

    .cta-buttons {
      display: flex;
      gap: v.$spacing-unit;
      justify-content: center;
      flex-wrap: wrap;
      
      @include m.respond-to('md') {
        justify-content: flex-start;
      }

      .primary-button {
        background-color: v.$primary-color;
        color: v.$text-light;
        padding: v.$spacing-unit v.$spacing-unit * 2;
        border-radius: 8px;
        font-weight: v.$font-weight-semibold;
        text-decoration: none;
        transition: v.$transition-base;

        &:hover {
          transform: translateY(-2px);
          box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        }
      }

      .secondary-button {
        background-color: transparent;
        color: v.$text-light;
        padding: v.$spacing-unit v.$spacing-unit * 2;
        border-radius: 8px;
        font-weight: v.$font-weight-semibold;
        text-decoration: none;
        border: 1px solid v.$border-color;
        transition: v.$transition-base;

        &:hover {
          background-color: rgba(255, 255, 255, 0.1);
          transform: translateY(-2px);
        }
      }
    }
  }

  .greeting-image {
    position: relative;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    
    @include m.respond-to('md') {
      margin: 0;
    }

    .lottie-animation {
      width: 100%;
      height: auto;
      filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
      transition: v.$transition-base;

      &:hover {
        transform: translateY(-5px);
        filter: drop-shadow(0 8px 12px rgba(0, 0, 0, 0.15));
      }
    }
  }

  .social-links {
    display: flex;
    gap: v.$spacing-unit;
    margin-top: v.$spacing-unit * 2;
    justify-content: center;
    
    @include m.respond-to('md') {
      justify-content: flex-start;
    }

    a {
      color: v.$text-muted;
      font-size: v.$font-size-xl;
      transition: v.$transition-base;
      padding: v.$spacing-unit * 0.5;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.05);
      
      &:hover {
        color: v.$text-light;
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes hover {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-15px);
  }
}

@keyframes wave-arm {
  0%, 100% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(-15deg);
  }
}

@keyframes twinkle {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

@keyframes wave {
  0% { transform: rotate(0deg); }
  10% { transform: rotate(14deg); }
  20% { transform: rotate(-8deg); }
  30% { transform: rotate(14deg); }
  40% { transform: rotate(-4deg); }
  50% { transform: rotate(10deg); }
  60% { transform: rotate(0deg); }
  100% { transform: rotate(0deg); }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
} 